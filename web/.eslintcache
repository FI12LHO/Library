[{"/home/marlom/Documentos/Projetos/Library/web/src/index.js":"1","/home/marlom/Documentos/Projetos/Library/web/src/App.js":"2","/home/marlom/Documentos/Projetos/Library/web/src/routes.js":"3","/home/marlom/Documentos/Projetos/Library/web/src/pages/home/index.js":"4","/home/marlom/Documentos/Projetos/Library/web/src/pages/login/index.js":"5","/home/marlom/Documentos/Projetos/Library/web/src/pages/register/index.js":"6","/home/marlom/Documentos/Projetos/Library/web/src/pages/main/index.js":"7","/home/marlom/Documentos/Projetos/Library/web/src/pages/detail/index.js":"8","/home/marlom/Documentos/Projetos/Library/web/src/pages/gallery/index.js":"9","/home/marlom/Documentos/Projetos/Library/web/src/services/api.js":"10","/home/marlom/Documentos/Projetos/Library/web/src/pages/addBook/index.js":"11"},{"size":196,"mtime":1608914627442,"results":"12","hashOfConfig":"13"},{"size":139,"mtime":1608916337522,"results":"14","hashOfConfig":"13"},{"size":964,"mtime":1609711606171,"results":"15","hashOfConfig":"13"},{"size":615,"mtime":1609427677063,"results":"16","hashOfConfig":"13"},{"size":2470,"mtime":1609427487698,"results":"17","hashOfConfig":"13"},{"size":3432,"mtime":1609427523154,"results":"18","hashOfConfig":"13"},{"size":3512,"mtime":1609711598751,"results":"19","hashOfConfig":"13"},{"size":4970,"mtime":1609711629050,"results":"20","hashOfConfig":"13"},{"size":2331,"mtime":1609713681874,"results":"21","hashOfConfig":"13"},{"size":118,"mtime":1609019412102,"results":"22","hashOfConfig":"13"},{"size":4399,"mtime":1609256763662,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1rlen10",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/marlom/Documentos/Projetos/Library/web/src/index.js",[],["49","50"],"/home/marlom/Documentos/Projetos/Library/web/src/App.js",[],"/home/marlom/Documentos/Projetos/Library/web/src/routes.js",[],"/home/marlom/Documentos/Projetos/Library/web/src/pages/home/index.js",[],"/home/marlom/Documentos/Projetos/Library/web/src/pages/login/index.js",[],"/home/marlom/Documentos/Projetos/Library/web/src/pages/register/index.js",[],"/home/marlom/Documentos/Projetos/Library/web/src/pages/main/index.js",["51"],"import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Api from '../../services/api';\n\nimport ArrowUp from '../../assets/arrow-up.svg';\nimport ArrowDown from '../../assets/arrow-down.svg';\nimport './style.css';\n\nexport default function Main() {\n    const [filter, setFilter] = useState('title');\n    const [books, setBooks] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        Api.get(`/book/${filter}`).then((response) => {setBooks(response.data)});\n    }, [books]);\n\n    if (localStorage.getItem('id') === null) {\n        history.push('/');\n        return 0\n    }\n\n    function logoff() {\n        localStorage.removeItem('id');\n        localStorage.removeItem('name');\n        localStorage.removeItem('email');\n\n        history.push('/');\n        return 0\n    }\n\n    function renderBook(book) {\n        return (\n            <div className='book-content' key={book.id}>\n                <div className='block'>\n                    <span className='tag'>Livro:</span>\n                    <span className='value'>{book.title}</span>\n                </div>\n                <div className='block'>\n                    <span className='tag'>Autor:</span>\n                    <span className='value'>{book.author}</span>\n                </div>\n                <div className='block'>\n                    <span className='tag'>Editora:</span>\n                    <span className='value'>{book.publishing_company}</span>\n                </div>\n                <div className='block'>\n                    <span className='tag'>Nota:</span>\n                    <span className='value'>{book.rate}</span>\n                </div>\n                <Link to={`/book/detail/${book.id_book}`} className='link'>\n                    <button>mais</button>\n                </Link>\n            </div>\n        );\n    }\n\n    return (\n        <div className='container-main'>\n            <div className='header'>\n                <div className='block'>\n                    <Link to='/book/add'>\n                        <button>Adicionar<br />livro</button>\n                    </Link>\n                    <Link to='/book/gallery'>\n                        <button>meus livros</button>\n                    </Link>\n                    <button onClick={logoff}>sair</button>\n                </div>\n            </div>\n            <div className='main'>\n                <div className='filter-container'>\n                    <div className='filter' onClick={() => {setFilter('title');}}>\n                        <label>Titulo</label>\n                        <img src={(filter === 'title') ? ArrowUp : ArrowDown} \n                            alt='' className='image-filter' />\n                    </div>\n                    <div className='filter' onClick={() => {setFilter('author');}}>\n                        <label>Autor</label>\n                        <img src={(filter === 'author') ? ArrowUp : ArrowDown} \n                            alt='' className='image-filter' />\n                    </div>\n                    <div className='filter' onClick={() => {setFilter('publishing_company');}}>\n                        <label>Editora</label>\n                        <img src={(filter === 'publishing_company') ? ArrowUp : ArrowDown} \n                            alt='' className='image-filter' />\n                    </div>\n                </div>\n                {books.map((book) => { return renderBook(book) })}\n            </div>\n        </div>\n    );\n}","/home/marlom/Documentos/Projetos/Library/web/src/pages/detail/index.js",["52"],"import React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport Api from '../../services/api';\n\nimport './style.css';\n\nexport default function Detail() {\n    const { id } = useParams();\n    const [rate, setRate] = useState(0);\n    const [comment, setComment] = useState('');\n    const [bookData, setBookData] = useState({});\n    const [ratings, setRatings] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        getBookData();\n        getRatings();\n    }, []);\n\n    if (localStorage.getItem('id') === null) {\n        history.push('/');\n        return 0\n    }\n\n    async function getBookData() {\n        await Api.get(`book/show/${id}`).then(response => setBookData(response.data));\n        console.log(bookData);\n    }\n\n    async function getRatings() {\n        await Api.get(`rate/show/${id}`).then(response => setRatings(response.data));\n    }\n\n    function logoff() {\n        localStorage.removeItem('id');\n        localStorage.removeItem('name');\n        localStorage.removeItem('email');\n\n        history.push('/');\n        return 0\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        if (comment === '') {\n            alert('O valor da nota precisa ser justificado.');\n            return 0\n        }\n\n        const data = {\n            'id_book': id,\n            'id_user': localStorage.getItem('id'),\n            'comment': comment.toLowerCase(),\n            'value': rate,\n            'auhtor': localStorage.getItem('name'),\n        };\n\n        setRate(0);\n        setComment('');\n\n        await Api.post('rate/create', data);\n    }\n\n    function render(rate) {\n        return (\n            <div className='comment'>\n                <div className='comment-header'>\n                    <span>{rate.author}</span>\n                    <span>{rate.updated_at}</span>\n                </div>\n                <p>{rate.comment}</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className='container-detail'>\n            <div className='header'>\n                <div className='block'>\n                    <Link to='/book'>\n                        <button>Voltar</button>\n                    </Link>\n                    <Link to='/book/galery'>\n                        <button>meus livros</button>\n                    </Link>\n                    <button onClick={logoff}>sair</button>\n                </div>\n            </div>\n            <div className='main'>\n                <div className='book-content'>\n                    <div className='block'>\n                        <span className='tag'>Livro:</span>\n                        <span className='value'>{bookData.title}</span>\n                    </div>\n                    <div className='block'>\n                        <span className='tag'>Autor:</span>\n                        <span className='value'>{bookData.author}</span>\n                    </div>\n                    <div className='block'>\n                        <span className='tag'>Editora:</span>\n                        <span className='value'>{bookData.publishing_company}</span>\n                    </div>\n                    <div className='block'>\n                        <span className='tag'>Quant. Paginas:</span>\n                        <span className='value'>{bookData.num_pages}</span>\n                    </div>\n                    <div className='block' id='block-description'>\n                        <p className='description'>\n                            {bookData.review}\n                        </p>\n                    </div>\n                    <form onSubmit={handleSubmit} className='form-rank'>\n                        <div className='block'>\n                            <span className='title'>Já leu ou conhece esse livro?</span>\n                            <label className='input_value' \n                                htmlFor='input_rate'>Dê sua nota de 1 a 5:</label>\n                            <input type='number' id='input_rate'\n                                value={rate} step=\"0.010\" \n                                onChange={(e) => {setRate(e.target.value)}} \n                                min={0} max={5} required />\n                        </div>\n                        <div className='block'>\n                            <label htmlFor='textarea'>Faça um comentario.</label>\n                            <textarea value={comment}\n                                onChange={(e) => {setComment(e.target.value)}}\n                                required></textarea>\n                        </div>\n                        <div className='block'>\n                            <button type='submit'>Votar</button>\n                        </div>\n                    </form>\n                </div>\n                <div className='comments-container'>\n                    { ratings.map((rate) => render(rate)) }\n                </div>\n            </div>\n        </div>\n    );\n}","/home/marlom/Documentos/Projetos/Library/web/src/pages/gallery/index.js",["53","54"],"/home/marlom/Documentos/Projetos/Library/web/src/services/api.js",[],"/home/marlom/Documentos/Projetos/Library/web/src/pages/addBook/index.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":16,"column":8,"nodeType":"61","endLine":16,"endColumn":15,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":18,"column":8,"nodeType":"61","endLine":18,"endColumn":10,"suggestions":"64"},{"ruleId":"59","severity":1,"message":"65","line":12,"column":40,"nodeType":"61","endLine":12,"endColumn":49,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":32,"column":14,"nodeType":"69","messageId":"70","endLine":32,"endColumn":24},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.","ArrayExpression",["73"],"React Hook useEffect has missing dependencies: 'getBookData' and 'getRatings'. Either include them or remove the dependency array.",["74"],"React Hook useEffect has a missing dependency: 'getMyBooks'. Either include it or remove the dependency array.",["75"],"no-unused-vars","'updateBook' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [books, filter]",{"range":"82","text":"83"},"Update the dependencies array to be: [getBookData, getRatings]",{"range":"84","text":"85"},"Update the dependencies array to be: [getMyBooks, myBooks]",{"range":"86","text":"87"},[543,550],"[books, filter]",[541,543],"[getBookData, getRatings]",[370,379],"[getMyBooks, myBooks]"]